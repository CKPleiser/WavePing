name: Deploy WavePing

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    name: Test & Lint
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run TypeScript check
        run: npx tsc --noEmit
        continue-on-error: true

      - name: Run ESLint
        run: npm run lint
        continue-on-error: true

      - name: Run tests
        run: npm test
        continue-on-error: true

  deploy-railway:
    name: Deploy to Railway
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: test
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4  
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install Railway CLI
        run: npm install -g @railway/cli

      - name: Deploy to Railway
        run: railway up --service ${{ secrets.RAILWAY_SERVICE_ID }}
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}

  setup-database:
    name: Deploy Database Changes
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: test
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Supabase CLI
        uses: supabase/setup-cli@v1
        with:
          version: latest

      - name: Link to Supabase project
        run: |
          supabase link --project-ref ${{ secrets.SUPABASE_PROJECT_REF }}
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}

      - name: Deploy database migrations
        run: supabase db push
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}

  setup-telegram-webhook:
    name: Setup Telegram Webhook
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: deploy-railway
    
    steps:
      - name: Set Telegram Webhook
        run: |
          curl -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/setWebhook" \
            -H "Content-Type: application/json" \
            -d "{\"url\": \"${{ secrets.RAILWAY_WEBHOOK_URL }}/api/telegram/webhook\", \"drop_pending_updates\": true}"

  health-check:
    name: Health Check
    if: github.ref == 'refs/heads/main'  
    runs-on: ubuntu-latest
    needs: [deploy-railway, setup-database, setup-telegram-webhook]
    
    steps:
      - name: Wait for deployment
        run: sleep 30

      - name: Check API health
        run: |
          curl -f "${{ secrets.RAILWAY_WEBHOOK_URL }}/health" || exit 1

      - name: Test Telegram bot
        run: |
          response=$(curl -s "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/getMe")
          echo $response | grep -q '"ok":true' || exit 1